name: tests

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        options:
        - -DWITH_SYSTEMD=ON
        - -DWITH_SYSTEMD=OFF
        - -DWITH_SYSTEMD=ON -DCMAKE_C_FLAGS="-fsanitize=address -fsanitize=leak -g" -DCMAKE_EXE_LINKER_FLAGS="-fsanitize=address -fsanitize=leak"
        - -DWITH_SYSTEMD=OFF -DCMAKE_C_FLAGS="-fsanitize=address -fsanitize=leak -g" -DCMAKE_EXE_LINKER_FLAGS="-fsanitize=address -fsanitize=leak"
    steps:
    - name: Inspect environment
      run: |
        whoami
        gcc --version

    - uses: actions/checkout@v2

    - name: Install required packages
      run: |
        sudo apt-get update
        sudo apt-get install libcurl4-openssl-dev libsystemd-dev libjson-glib-dev libeconf-dev

    - name: Build (with ${{ matrix.options }})
      run: |
        mkdir -p build
        cd build
        cmake ${{ matrix.options }} -DQA_BUILD=ON ..
        make
        cd -

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install test dependencies
      run: |
        sudo apt-get install libgirepository1.0-dev python3-virtualenv nginx-full
        python -m pip install --upgrade pip
        pip install -r test-requirements.txt

    - name: Login to DockerHub
      uses: docker/login-action@v1
      if: github.ref == 'refs/heads/master'
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Update/launch hawkBit docker container
      run: |
        docker pull hawkbit/hawkbit-update-server
        docker run -d --name hawkbit -p 8080:8080 hawkbit/hawkbit-update-server

    - name: Run test suite
      run: |
        ./test/wait-for-hawkbit-online
        ASAN_OPTIONS=fast_unwind_on_malloc=0 dbus-run-session -- pytest -v

  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Install required packages
      run: |
        sudo apt-get update
        sudo apt-get install libcurl4-openssl-dev libjson-glib-dev libeconf-dev python3-sphinx python3-sphinx-rtd-theme doxygen

    - name: Build documentation (Sphinx & Doxygen)
      run: |
        mkdir -p build
        cd build
        cmake -DBUILD_DOC=ON -DSPHINX_OPTIONS=-W ..
        make doc_doxygen
        make doc
        cd -

  uncrustify:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Run uncrustify check
      run: |
        ./uncrustify.sh
        git diff --exit-code
